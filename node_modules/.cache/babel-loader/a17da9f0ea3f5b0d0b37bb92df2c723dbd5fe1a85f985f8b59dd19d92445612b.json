{"ast":null,"code":"var _jsxFileName = \"/Users/alessandrocastelbuono/Desktop/tora-app/src/components/screens/MessagesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport { dummyProfiles } from '../../data/profiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesScreen = ({\n  onOpenChat\n}) => {\n  _s();\n  const {\n    messages,\n    connectionRequests\n  } = useAppContext();\n  const {\n    t\n  } = useLanguage();\n  const [conversations, setConversations] = useState([]);\n  const [activeTab, setActiveTab] = useState('messages'); // 'messages' or 'requests'\n\n  useEffect(() => {\n    // Build conversations from messages\n    const convos = [];\n\n    // Add conversations from messages\n    Object.keys(messages).forEach(userId => {\n      const userMessages = messages[userId];\n      if (userMessages && userMessages.length > 0) {\n        const profile = dummyProfiles.find(p => p.id === parseInt(userId));\n        if (profile) {\n          const lastMessage = userMessages[userMessages.length - 1];\n          convos.push({\n            id: profile.id,\n            name: profile.name,\n            avatar: profile.avatar,\n            role: profile.role,\n            lastMessage: lastMessage.text,\n            timestamp: getTimeAgo(lastMessage.timestamp),\n            unread: false,\n            rawTimestamp: new Date(lastMessage.timestamp),\n            profile: profile\n          });\n        }\n      }\n    });\n\n    // Sort by most recent first\n    convos.sort((a, b) => b.rawTimestamp - a.rawTimestamp);\n    setConversations(convos);\n  }, [messages]);\n  const getTimeAgo = timestamp => {\n    const now = new Date();\n    const messageTime = new Date(timestamp);\n    const diffMs = now - messageTime;\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMs / 3600000);\n    const diffDays = Math.floor(diffMs / 86400000);\n    if (diffMins < 1) return t('messages.justNow');\n    if (diffMins < 60) return `${diffMins}m`;\n    if (diffHours < 24) return `${diffHours}h`;\n    if (diffDays < 7) return `${diffDays}d`;\n    return messageTime.toLocaleDateString();\n  };\n  const getInitial = name => {\n    return name ? name.charAt(0).toUpperCase() : 'U';\n  };\n  const getAvatarClass = role => {\n    const roleClass = {\n      'ARTIST': 'avatar-artist',\n      'VENUE': 'avatar-venue',\n      'PROMOTER': 'avatar-promoter',\n      'AGENT': 'avatar-agent'\n    };\n    return roleClass[role] || 'avatar-artist';\n  };\n\n  // Get connection requests\n  const requestProfiles = Array.from(connectionRequests).map(profileId => {\n    return dummyProfiles.find(p => p.id === profileId);\n  }).filter(p => p);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen active messages-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `messages-tab ${activeTab === 'messages' ? 'active' : ''}`,\n        onClick: () => setActiveTab('messages'),\n        children: [\"Messages\", conversations.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tab-count\",\n          children: conversations.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `messages-tab ${activeTab === 'requests' ? 'active' : ''}`,\n        onClick: () => setActiveTab('requests'),\n        children: [\"Requests\", requestProfiles.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tab-count\",\n          children: requestProfiles.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-list\",\n      children: activeTab === 'messages' ?\n      // Messages Tab\n      conversations.length > 0 ? conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-card\",\n        onClick: () => onOpenChat && onOpenChat(conv.profile),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-avatar ${getAvatarClass(conv.role)}`,\n          children: conv.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: conv.avatar,\n            alt: conv.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this) : getInitial(conv.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: conv.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-preview\",\n              children: conv.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: conv.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, conv.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('messages.noMessages')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this) :\n      // Requests Tab\n      requestProfiles.length > 0 ? requestProfiles.map(profile => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-card request-card\",\n        onClick: () => onOpenChat && onOpenChat(profile),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-avatar ${getAvatarClass(profile.role)}`,\n          children: profile.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile.avatar,\n            alt: profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this) : getInitial(profile.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: profile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-preview\",\n              children: \"Connection request pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-primary\",\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-outline\",\n              children: \"Decline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, profile.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pending requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesScreen, \"c/B6R0KJnuZHiE7s1JKTx9fmxvo=\", false, function () {\n  return [useAppContext, useLanguage];\n});\n_c = MessagesScreen;\nexport default MessagesScreen;\nvar _c;\n$RefreshReg$(_c, \"MessagesScreen\");","map":{"version":3,"names":["React","useState","useEffect","useAppContext","useLanguage","dummyProfiles","jsxDEV","_jsxDEV","MessagesScreen","onOpenChat","_s","messages","connectionRequests","t","conversations","setConversations","activeTab","setActiveTab","convos","Object","keys","forEach","userId","userMessages","length","profile","find","p","id","parseInt","lastMessage","push","name","avatar","role","text","timestamp","getTimeAgo","unread","rawTimestamp","Date","sort","a","b","now","messageTime","diffMs","diffMins","Math","floor","diffHours","diffDays","toLocaleDateString","getInitial","charAt","toUpperCase","getAvatarClass","roleClass","requestProfiles","Array","from","map","profileId","filter","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","conv","src","alt","_c","$RefreshReg$"],"sources":["/Users/alessandrocastelbuono/Desktop/tora-app/src/components/screens/MessagesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport { dummyProfiles } from '../../data/profiles';\n\nconst MessagesScreen = ({ onOpenChat }) => {\n  const { messages, connectionRequests } = useAppContext();\n  const { t } = useLanguage();\n  const [conversations, setConversations] = useState([]);\n  const [activeTab, setActiveTab] = useState('messages'); // 'messages' or 'requests'\n\n  useEffect(() => {\n    // Build conversations from messages\n    const convos = [];\n    \n    // Add conversations from messages\n    Object.keys(messages).forEach(userId => {\n      const userMessages = messages[userId];\n      if (userMessages && userMessages.length > 0) {\n        const profile = dummyProfiles.find(p => p.id === parseInt(userId));\n        if (profile) {\n          const lastMessage = userMessages[userMessages.length - 1];\n          convos.push({\n            id: profile.id,\n            name: profile.name,\n            avatar: profile.avatar,\n            role: profile.role,\n            lastMessage: lastMessage.text,\n            timestamp: getTimeAgo(lastMessage.timestamp),\n            unread: false,\n            rawTimestamp: new Date(lastMessage.timestamp),\n            profile: profile\n          });\n        }\n      }\n    });\n\n    // Sort by most recent first\n    convos.sort((a, b) => b.rawTimestamp - a.rawTimestamp);\n    \n    setConversations(convos);\n  }, [messages]);\n\n  const getTimeAgo = (timestamp) => {\n    const now = new Date();\n    const messageTime = new Date(timestamp);\n    const diffMs = now - messageTime;\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMs / 3600000);\n    const diffDays = Math.floor(diffMs / 86400000);\n\n    if (diffMins < 1) return t('messages.justNow');\n    if (diffMins < 60) return `${diffMins}m`;\n    if (diffHours < 24) return `${diffHours}h`;\n    if (diffDays < 7) return `${diffDays}d`;\n    return messageTime.toLocaleDateString();\n  };\n\n  const getInitial = (name) => {\n    return name ? name.charAt(0).toUpperCase() : 'U';\n  };\n\n  const getAvatarClass = (role) => {\n    const roleClass = {\n      'ARTIST': 'avatar-artist',\n      'VENUE': 'avatar-venue',\n      'PROMOTER': 'avatar-promoter',\n      'AGENT': 'avatar-agent'\n    };\n    return roleClass[role] || 'avatar-artist';\n  };\n\n  // Get connection requests\n  const requestProfiles = Array.from(connectionRequests).map(profileId => {\n    return dummyProfiles.find(p => p.id === profileId);\n  }).filter(p => p);\n\n  return (\n    <div className=\"screen active messages-screen\">\n      {/* Tab Navigation */}\n      <div className=\"messages-tabs\">\n        <button \n          className={`messages-tab ${activeTab === 'messages' ? 'active' : ''}`}\n          onClick={() => setActiveTab('messages')}\n        >\n          Messages\n          {conversations.length > 0 && (\n            <span className=\"tab-count\">{conversations.length}</span>\n          )}\n        </button>\n        <button \n          className={`messages-tab ${activeTab === 'requests' ? 'active' : ''}`}\n          onClick={() => setActiveTab('requests')}\n        >\n          Requests\n          {requestProfiles.length > 0 && (\n            <span className=\"tab-count\">{requestProfiles.length}</span>\n          )}\n        </button>\n      </div>\n\n      <div className=\"messages-list\">\n        {activeTab === 'messages' ? (\n          // Messages Tab\n          conversations.length > 0 ? (\n            conversations.map(conv => (\n              <div \n                key={conv.id} \n                className=\"message-card\"\n                onClick={() => onOpenChat && onOpenChat(conv.profile)}\n              >\n                <div className={`message-avatar ${getAvatarClass(conv.role)}`}>\n                  {conv.avatar ? (\n                    <img src={conv.avatar} alt={conv.name} />\n                  ) : (\n                    getInitial(conv.name)\n                  )}\n                </div>\n                <div className=\"message-content\">\n                  <div className=\"message-info\">\n                    <h3>{conv.name}</h3>\n                    <p className=\"message-preview\">{conv.lastMessage}</p>\n                  </div>\n                  <span className=\"message-time\">{conv.timestamp}</span>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"empty-state\">\n              <p>{t('messages.noMessages')}</p>\n            </div>\n          )\n        ) : (\n          // Requests Tab\n          requestProfiles.length > 0 ? (\n            requestProfiles.map(profile => (\n              <div \n                key={profile.id} \n                className=\"message-card request-card\"\n                onClick={() => onOpenChat && onOpenChat(profile)}\n              >\n                <div className={`message-avatar ${getAvatarClass(profile.role)}`}>\n                  {profile.avatar ? (\n                    <img src={profile.avatar} alt={profile.name} />\n                  ) : (\n                    getInitial(profile.name)\n                  )}\n                </div>\n                <div className=\"message-content\">\n                  <div className=\"message-info\">\n                    <h3>{profile.name}</h3>\n                    <p className=\"message-preview\">Connection request pending</p>\n                  </div>\n                  <div className=\"request-actions\">\n                    <button className=\"btn btn-sm btn-primary\">Accept</button>\n                    <button className=\"btn btn-sm btn-outline\">Decline</button>\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"empty-state\">\n              <p>No pending requests</p>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,aAAa,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,QAAQ;IAAEC;EAAmB,CAAC,GAAGT,aAAa,CAAC,CAAC;EACxD,MAAM;IAAEU;EAAE,CAAC,GAAGT,WAAW,CAAC,CAAC;EAC3B,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,MAAM,GAAG,EAAE;;IAEjB;IACAC,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC,CAACU,OAAO,CAACC,MAAM,IAAI;MACtC,MAAMC,YAAY,GAAGZ,QAAQ,CAACW,MAAM,CAAC;MACrC,IAAIC,YAAY,IAAIA,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3C,MAAMC,OAAO,GAAGpB,aAAa,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACP,MAAM,CAAC,CAAC;QAClE,IAAIG,OAAO,EAAE;UACX,MAAMK,WAAW,GAAGP,YAAY,CAACA,YAAY,CAACC,MAAM,GAAG,CAAC,CAAC;UACzDN,MAAM,CAACa,IAAI,CAAC;YACVH,EAAE,EAAEH,OAAO,CAACG,EAAE;YACdI,IAAI,EAAEP,OAAO,CAACO,IAAI;YAClBC,MAAM,EAAER,OAAO,CAACQ,MAAM;YACtBC,IAAI,EAAET,OAAO,CAACS,IAAI;YAClBJ,WAAW,EAAEA,WAAW,CAACK,IAAI;YAC7BC,SAAS,EAAEC,UAAU,CAACP,WAAW,CAACM,SAAS,CAAC;YAC5CE,MAAM,EAAE,KAAK;YACbC,YAAY,EAAE,IAAIC,IAAI,CAACV,WAAW,CAACM,SAAS,CAAC;YAC7CX,OAAO,EAAEA;UACX,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;;IAEF;IACAP,MAAM,CAACuB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACJ,YAAY,GAAGG,CAAC,CAACH,YAAY,CAAC;IAEtDxB,gBAAgB,CAACG,MAAM,CAAC;EAC1B,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAM0B,UAAU,GAAID,SAAS,IAAK;IAChC,MAAMQ,GAAG,GAAG,IAAIJ,IAAI,CAAC,CAAC;IACtB,MAAMK,WAAW,GAAG,IAAIL,IAAI,CAACJ,SAAS,CAAC;IACvC,MAAMU,MAAM,GAAGF,GAAG,GAAGC,WAAW;IAChC,MAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,GAAG,KAAK,CAAC;IAC3C,MAAMI,SAAS,GAAGF,IAAI,CAACC,KAAK,CAACH,MAAM,GAAG,OAAO,CAAC;IAC9C,MAAMK,QAAQ,GAAGH,IAAI,CAACC,KAAK,CAACH,MAAM,GAAG,QAAQ,CAAC;IAE9C,IAAIC,QAAQ,GAAG,CAAC,EAAE,OAAOlC,CAAC,CAAC,kBAAkB,CAAC;IAC9C,IAAIkC,QAAQ,GAAG,EAAE,EAAE,OAAO,GAAGA,QAAQ,GAAG;IACxC,IAAIG,SAAS,GAAG,EAAE,EAAE,OAAO,GAAGA,SAAS,GAAG;IAC1C,IAAIC,QAAQ,GAAG,CAAC,EAAE,OAAO,GAAGA,QAAQ,GAAG;IACvC,OAAON,WAAW,CAACO,kBAAkB,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,UAAU,GAAIrB,IAAI,IAAK;IAC3B,OAAOA,IAAI,GAAGA,IAAI,CAACsB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,GAAG;EAClD,CAAC;EAED,MAAMC,cAAc,GAAItB,IAAI,IAAK;IAC/B,MAAMuB,SAAS,GAAG;MAChB,QAAQ,EAAE,eAAe;MACzB,OAAO,EAAE,cAAc;MACvB,UAAU,EAAE,iBAAiB;MAC7B,OAAO,EAAE;IACX,CAAC;IACD,OAAOA,SAAS,CAACvB,IAAI,CAAC,IAAI,eAAe;EAC3C,CAAC;;EAED;EACA,MAAMwB,eAAe,GAAGC,KAAK,CAACC,IAAI,CAAChD,kBAAkB,CAAC,CAACiD,GAAG,CAACC,SAAS,IAAI;IACtE,OAAOzD,aAAa,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKkC,SAAS,CAAC;EACpD,CAAC,CAAC,CAACC,MAAM,CAACpC,CAAC,IAAIA,CAAC,CAAC;EAEjB,oBACEpB,OAAA;IAAKyD,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAE5C1D,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B1D,OAAA;QACEyD,SAAS,EAAE,gBAAgBhD,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QACtEkD,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAAC,UAAU,CAAE;QAAAgD,QAAA,GACzC,UAEC,EAACnD,aAAa,CAACU,MAAM,GAAG,CAAC,iBACvBjB,OAAA;UAAMyD,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEnD,aAAa,CAACU;QAAM;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACzD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACT/D,OAAA;QACEyD,SAAS,EAAE,gBAAgBhD,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QACtEkD,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAAC,UAAU,CAAE;QAAAgD,QAAA,GACzC,UAEC,EAACP,eAAe,CAAClC,MAAM,GAAG,CAAC,iBACzBjB,OAAA;UAAMyD,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEP,eAAe,CAAClC;QAAM;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN/D,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BjD,SAAS,KAAK,UAAU;MACvB;MACAF,aAAa,CAACU,MAAM,GAAG,CAAC,GACtBV,aAAa,CAAC+C,GAAG,CAACU,IAAI,iBACpBhE,OAAA;QAEEyD,SAAS,EAAC,cAAc;QACxBE,OAAO,EAAEA,CAAA,KAAMzD,UAAU,IAAIA,UAAU,CAAC8D,IAAI,CAAC9C,OAAO,CAAE;QAAAwC,QAAA,gBAEtD1D,OAAA;UAAKyD,SAAS,EAAE,kBAAkBR,cAAc,CAACe,IAAI,CAACrC,IAAI,CAAC,EAAG;UAAA+B,QAAA,EAC3DM,IAAI,CAACtC,MAAM,gBACV1B,OAAA;YAAKiE,GAAG,EAAED,IAAI,CAACtC,MAAO;YAACwC,GAAG,EAAEF,IAAI,CAACvC;UAAK;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GAEzCjB,UAAU,CAACkB,IAAI,CAACvC,IAAI;QACrB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN/D,OAAA;UAAKyD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B1D,OAAA;YAAKyD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B1D,OAAA;cAAA0D,QAAA,EAAKM,IAAI,CAACvC;YAAI;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpB/D,OAAA;cAAGyD,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAEM,IAAI,CAACzC;YAAW;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACN/D,OAAA;YAAMyD,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEM,IAAI,CAACnC;UAAS;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA,GAjBDC,IAAI,CAAC3C,EAAE;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBT,CACN,CAAC,gBAEF/D,OAAA;QAAKyD,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1B1D,OAAA;UAAA0D,QAAA,EAAIpD,CAAC,CAAC,qBAAqB;QAAC;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACN;MAED;MACAZ,eAAe,CAAClC,MAAM,GAAG,CAAC,GACxBkC,eAAe,CAACG,GAAG,CAACpC,OAAO,iBACzBlB,OAAA;QAEEyD,SAAS,EAAC,2BAA2B;QACrCE,OAAO,EAAEA,CAAA,KAAMzD,UAAU,IAAIA,UAAU,CAACgB,OAAO,CAAE;QAAAwC,QAAA,gBAEjD1D,OAAA;UAAKyD,SAAS,EAAE,kBAAkBR,cAAc,CAAC/B,OAAO,CAACS,IAAI,CAAC,EAAG;UAAA+B,QAAA,EAC9DxC,OAAO,CAACQ,MAAM,gBACb1B,OAAA;YAAKiE,GAAG,EAAE/C,OAAO,CAACQ,MAAO;YAACwC,GAAG,EAAEhD,OAAO,CAACO;UAAK;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GAE/CjB,UAAU,CAAC5B,OAAO,CAACO,IAAI;QACxB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN/D,OAAA;UAAKyD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B1D,OAAA;YAAKyD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B1D,OAAA;cAAA0D,QAAA,EAAKxC,OAAO,CAACO;YAAI;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvB/D,OAAA;cAAGyD,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAA0B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACN/D,OAAA;YAAKyD,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B1D,OAAA;cAAQyD,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1D/D,OAAA;cAAQyD,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GApBD7C,OAAO,CAACG,EAAE;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBZ,CACN,CAAC,gBAEF/D,OAAA;QAAKyD,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1B1D,OAAA;UAAA0D,QAAA,EAAG;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAER;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5D,EAAA,CApKIF,cAAc;EAAA,QACuBL,aAAa,EACxCC,WAAW;AAAA;AAAAsE,EAAA,GAFrBlE,cAAc;AAsKpB,eAAeA,cAAc;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}