{"ast":null,"code":"var _jsxFileName = \"/Users/alessandrocastelbuono/Desktop/tora-app/src/components/screens/ChatScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatScreen = ({\n  user,\n  onClose\n}) => {\n  _s();\n  const {\n    messages,\n    sendMessage\n  } = useAppContext();\n  const {\n    t\n  } = useLanguage();\n  const [inputMessage, setInputMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const userMessages = messages[user.id] || [];\n  useEffect(() => {\n    var _inputRef$current;\n    scrollToBottom();\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, [userMessages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSend = () => {\n    if (inputMessage.trim()) {\n      sendMessage(user.id, inputMessage);\n      setInputMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const getInitial = name => {\n    return name ? name.charAt(0).toUpperCase() : 'U';\n  };\n  const getAvatarClass = role => {\n    const roleClass = {\n      'ARTIST': 'avatar-artist',\n      'VENUE': 'avatar-venue',\n      'PROMOTER': 'avatar-promoter',\n      'AGENT': 'avatar-agent'\n    };\n    return roleClass[role] || 'avatar-artist';\n  };\n  const formatMessageTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit'\n    });\n  };\n  const shouldShowDateSeparator = (currentMsg, prevMsg) => {\n    if (!prevMsg) return true;\n    const currentDate = new Date(currentMsg.timestamp).toDateString();\n    const prevDate = new Date(prevMsg.timestamp).toDateString();\n    return currentDate !== prevDate;\n  };\n  const formatDateSeparator = timestamp => {\n    const msgDate = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (msgDate.toDateString() === today.toDateString()) {\n      return t('messages.today');\n    } else if (msgDate.toDateString() === yesterday.toDateString()) {\n      return t('messages.yesterday');\n    } else {\n      // Get localized day and month names\n      const weekdays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n      const months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n      const weekday = t(`dateFormat.${weekdays[msgDate.getDay()]}`);\n      const month = t(`dateFormat.${months[msgDate.getMonth()]}`);\n      const day = msgDate.getDate();\n      return `${weekday}, ${month} ${day}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-screen active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M15 18L9 12L15 6\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-avatar ${getAvatarClass(user.role)}`,\n          children: user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this) : getInitial(user.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-role\",\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-location\",\n            children: user.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [userMessages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-empty\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [t('messages.startConversationWith'), \" \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t('messages.sendMessageToBegin')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), userMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [shouldShowDateSeparator(msg, userMessages[index - 1]) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-separator\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatDateSeparator(msg.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isMe ? 'message-sent' : 'message-received'}`,\n          children: !msg.isMe && index === 0 || index > 0 && userMessages[index - 1].isMe !== msg.isMe ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatMessageTime(msg.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: formatMessageTime(msg.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          placeholder: t('messages.writeYourMessage'),\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-btn\",\n          onClick: handleSend,\n          disabled: !inputMessage.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L11 13\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L15 22L11 13L2 9L22 2Z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatScreen, \"9mlrwFOo+6XYITCnVxfO0x6Bk5M=\", false, function () {\n  return [useAppContext, useLanguage];\n});\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useAppContext","useLanguage","jsxDEV","_jsxDEV","ChatScreen","user","onClose","_s","messages","sendMessage","t","inputMessage","setInputMessage","messagesEndRef","inputRef","userMessages","id","_inputRef$current","scrollToBottom","current","focus","_messagesEndRef$curre","scrollIntoView","behavior","handleSend","trim","handleKeyPress","e","key","shiftKey","preventDefault","getInitial","name","charAt","toUpperCase","getAvatarClass","role","roleClass","formatMessageTime","timestamp","Date","toLocaleTimeString","hour","minute","shouldShowDateSeparator","currentMsg","prevMsg","currentDate","toDateString","prevDate","formatDateSeparator","msgDate","today","yesterday","setDate","getDate","weekdays","months","weekday","getDay","month","getMonth","day","className","children","onClick","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","avatar","src","alt","location","length","map","msg","index","Fragment","isMe","text","ref","type","placeholder","value","onChange","target","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["/Users/alessandrocastelbuono/Desktop/tora-app/src/components/screens/ChatScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { useLanguage } from '../../contexts/LanguageContext';\n\nconst ChatScreen = ({ user, onClose }) => {\n  const { messages, sendMessage } = useAppContext();\n  const { t } = useLanguage();\n  const [inputMessage, setInputMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const userMessages = messages[user.id] || [];\n\n  useEffect(() => {\n    scrollToBottom();\n    inputRef.current?.focus();\n  }, [userMessages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleSend = () => {\n    if (inputMessage.trim()) {\n      sendMessage(user.id, inputMessage);\n      setInputMessage('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const getInitial = (name) => {\n    return name ? name.charAt(0).toUpperCase() : 'U';\n  };\n\n  const getAvatarClass = (role) => {\n    const roleClass = {\n      'ARTIST': 'avatar-artist',\n      'VENUE': 'avatar-venue',\n      'PROMOTER': 'avatar-promoter',\n      'AGENT': 'avatar-agent'\n    };\n    return roleClass[role] || 'avatar-artist';\n  };\n\n  const formatMessageTime = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString('en-US', { \n      hour: 'numeric', \n      minute: '2-digit' \n    });\n  };\n\n  const shouldShowDateSeparator = (currentMsg, prevMsg) => {\n    if (!prevMsg) return true;\n    const currentDate = new Date(currentMsg.timestamp).toDateString();\n    const prevDate = new Date(prevMsg.timestamp).toDateString();\n    return currentDate !== prevDate;\n  };\n\n  const formatDateSeparator = (timestamp) => {\n    const msgDate = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    if (msgDate.toDateString() === today.toDateString()) {\n      return t('messages.today');\n    } else if (msgDate.toDateString() === yesterday.toDateString()) {\n      return t('messages.yesterday');\n    } else {\n      // Get localized day and month names\n      const weekdays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n      const months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n      \n      const weekday = t(`dateFormat.${weekdays[msgDate.getDay()]}`);\n      const month = t(`dateFormat.${months[msgDate.getMonth()]}`);\n      const day = msgDate.getDate();\n      \n      return `${weekday}, ${month} ${day}`;\n    }\n  };\n\n  return (\n    <div className=\"chat-screen active\">\n      <div className=\"chat-header\">\n        <button className=\"back-btn\" onClick={onClose}>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n            <path d=\"M15 18L9 12L15 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          </svg>\n        </button>\n        <div className=\"chat-user-info\">\n          <div className={`chat-avatar ${getAvatarClass(user.role)}`}>\n            {user.avatar ? (\n              <img src={user.avatar} alt={user.name} />\n            ) : (\n              getInitial(user.name)\n            )}\n          </div>\n          <div className=\"chat-user-details\">\n            <h3>{user.name}</h3>\n            <span className=\"chat-role\">{user.role}</span>\n            <span className=\"chat-location\">{user.location}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"chat-messages\">\n        {userMessages.length === 0 && (\n          <div className=\"chat-empty\">\n            <p>{t('messages.startConversationWith')} {user.name}</p>\n            <span>{t('messages.sendMessageToBegin')}</span>\n          </div>\n        )}\n        {userMessages.map((msg, index) => (\n          <React.Fragment key={index}>\n            {shouldShowDateSeparator(msg, userMessages[index - 1]) && (\n              <div className=\"date-separator\">\n                <span>{formatDateSeparator(msg.timestamp)}</span>\n              </div>\n            )}\n            <div className={`message ${msg.isMe ? 'message-sent' : 'message-received'}`}>\n              {!msg.isMe && index === 0 || (index > 0 && userMessages[index - 1].isMe !== msg.isMe) ? (\n                <div className=\"message-group\">\n                  <div className=\"message-bubble\">\n                    <p>{msg.text}</p>\n                    <span className=\"message-time\">{formatMessageTime(msg.timestamp)}</span>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"message-bubble\">\n                  <p>{msg.text}</p>\n                  <span className=\"message-time\">{formatMessageTime(msg.timestamp)}</span>\n                </div>\n              )}\n            </div>\n          </React.Fragment>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <div className=\"chat-input-container\">\n        <div className=\"chat-input-wrapper\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            placeholder={t('messages.writeYourMessage')}\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n            className=\"chat-input\"\n          />\n          <button \n            className=\"send-btn\"\n            onClick={handleSend}\n            disabled={!inputMessage.trim()}\n          >\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path d=\"M22 2L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}