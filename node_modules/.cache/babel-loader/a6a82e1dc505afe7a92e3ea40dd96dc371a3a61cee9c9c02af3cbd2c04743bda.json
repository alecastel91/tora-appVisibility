{"ast":null,"code":"var _jsxFileName = \"/Users/alessandrocastelbuono/Desktop/tora-app/src/components/screens/MessagesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../common/Card';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesScreen = ({\n  onOpenChat\n}) => {\n  _s();\n  const {\n    conversations\n  } = useAppContext();\n  const [searchQuery, setSearchQuery] = useState('');\n  const filteredConversations = conversations.filter(conv => conv.user.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diff = now - date;\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    if (days === 0) {\n      return date.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit'\n      });\n    } else if (days === 1) {\n      return 'Yesterday';\n    } else if (days < 7) {\n      return date.toLocaleDateString('en-US', {\n        weekday: 'short'\n      });\n    } else {\n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen messages-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search conversations...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-list\",\n      children: filteredConversations.map(conversation => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"conversation-item\",\n        onClick: () => onOpenChat(conversation.user),\n        padding: false,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: conversation.user.avatar,\n              alt: conversation.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), conversation.user.isOnline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"online-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: conversation.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conversation-time\",\n                children: formatTime(conversation.lastMessage.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: conversation.unreadCount > 0 ? 'unread' : '',\n                children: [conversation.lastMessage.isMe && 'You: ', conversation.lastMessage.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), conversation.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"unread-badge\",\n                children: conversation.unreadCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, conversation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesScreen, \"10ieipDGlmUDZpdXRUDHjWQbjMg=\", false, function () {\n  return [useAppContext];\n});\n_c = MessagesScreen;\nexport default MessagesScreen;\nvar _c;\n$RefreshReg$(_c, \"MessagesScreen\");","map":{"version":3,"names":["React","useState","Card","useAppContext","jsxDEV","_jsxDEV","MessagesScreen","onOpenChat","_s","conversations","searchQuery","setSearchQuery","filteredConversations","filter","conv","user","name","toLowerCase","includes","formatTime","timestamp","date","Date","now","diff","days","Math","floor","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","conversation","onClick","padding","src","avatar","alt","isOnline","lastMessage","unreadCount","isMe","text","id","_c","$RefreshReg$"],"sources":["/Users/alessandrocastelbuono/Desktop/tora-app/src/components/screens/MessagesScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../common/Card';\nimport { useAppContext } from '../../contexts/AppContext';\n\nconst MessagesScreen = ({ onOpenChat }) => {\n  const { conversations } = useAppContext();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredConversations = conversations.filter(conv =>\n    conv.user.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diff = now - date;\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    \n    if (days === 0) {\n      return date.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\n    } else if (days === 1) {\n      return 'Yesterday';\n    } else if (days < 7) {\n      return date.toLocaleDateString('en-US', { weekday: 'short' });\n    } else {\n      return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    }\n  };\n\n  return (\n    <div className=\"screen messages-screen\">\n      <div className=\"messages-header\">\n        <h2>Messages</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search conversations...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"search-input\"\n        />\n      </div>\n\n      <div className=\"conversations-list\">\n        {filteredConversations.map(conversation => (\n          <Card \n            key={conversation.id} \n            className=\"conversation-item\"\n            onClick={() => onOpenChat(conversation.user)}\n            padding={false}\n          >\n            <div className=\"conversation-content\">\n              <div className=\"conversation-avatar\">\n                <img src={conversation.user.avatar} alt={conversation.user.name} />\n                {conversation.user.isOnline && <span className=\"online-indicator\" />}\n              </div>\n              <div className=\"conversation-info\">\n                <div className=\"conversation-header\">\n                  <h4>{conversation.user.name}</h4>\n                  <span className=\"conversation-time\">\n                    {formatTime(conversation.lastMessage.timestamp)}\n                  </span>\n                </div>\n                <div className=\"conversation-preview\">\n                  <p className={conversation.unreadCount > 0 ? 'unread' : ''}>\n                    {conversation.lastMessage.isMe && 'You: '}\n                    {conversation.lastMessage.text}\n                  </p>\n                  {conversation.unreadCount > 0 && (\n                    <span className=\"unread-badge\">{conversation.unreadCount}</span>\n                  )}\n                </div>\n              </div>\n            </div>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}