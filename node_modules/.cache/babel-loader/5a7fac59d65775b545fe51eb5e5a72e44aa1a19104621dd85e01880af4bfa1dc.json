{"ast":null,"code":"var _jsxFileName = \"/Users/alessandrocastelbuono/Desktop/tora-app/src/contexts/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { mockUsers, mockConversations, mockExploreFeed } from '../services/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const useAppContext = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within AppProvider');\n  }\n  return context;\n};\n_s(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [likedProfiles, setLikedProfiles] = useState(new Set());\n  const [connectionRequests, setConnectionRequests] = useState(new Set());\n\n  // Multiple user profiles\n  const [userProfiles, setUserProfiles] = useState([{\n    id: 'al-jones',\n    name: 'Al Jones',\n    role: 'ARTIST',\n    bio: 'Milan-born, Italian-British-Jamaican artist Al Jones started in underground electronic music in 2006. Since young age he gained acclaim in Milan\\'s top clubs, and became resident DJ of the party Vitamina in 2016. Now Tokyo-based, he launched MOVE ãƒ ãƒ¼ãƒ– in 2022, an itinerant event celebrating art, self-expression, and electronic music, and founded the record label MOVE TRAX in 2025.',\n    location: 'Tokyo, Japan',\n    city: 'Tokyo',\n    country: 'Japan',\n    avatar: null,\n    genres: ['House', 'Deep House', 'Progressive House'],\n    residentAdvisor: 'https://it.ra.co/dj/aljones',\n    mixtape: 'https://soundcloud.com/headstream/move-tokyo-w-al-jones-friday-2nd-june?si=ae4194d0caec4177a9b49b8b1b5151b2&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing',\n    spotify: 'https://open.spotify.com/intl-it/artist/0UX0Il3rXsvMI4ZgYP3cc7?si=hph_EjveSBmYpBloiruvOw',\n    instagram: '@aljones_groove',\n    website: '',\n    isPremium: true,\n    calendarVisible: true,\n    travelSchedule: [{\n      city: 'Berlin',\n      country: 'Germany',\n      from: '2025-02-15',\n      to: '2025-02-20'\n    }, {\n      city: 'Amsterdam',\n      country: 'Netherlands',\n      from: '2025-02-21',\n      to: '2025-02-25'\n    }, {\n      city: 'London',\n      country: 'UK',\n      from: '2025-03-01',\n      to: '2025-03-05'\n    }]\n  }, {\n    id: 'alessandro-castelbuono',\n    name: 'Alessandro Castelbuono',\n    role: 'AGENT',\n    bio: 'Experienced music industry professional specializing in electronic music artist management and booking. Based in Tokyo with deep connections across Asia-Pacific markets. Represents cutting-edge artists and facilitates international collaborations between Japanese and European electronic music scenes.',\n    location: 'Tokyo, Japan',\n    city: 'Tokyo',\n    country: 'Japan',\n    avatar: null,\n    genres: ['Techno', 'House', 'Progressive House', 'Melodic Techno'],\n    residentAdvisor: '',\n    mixtape: '',\n    spotify: '',\n    instagram: '@alessandro_agent',\n    website: 'https://castelbuono-agency.com'\n  }, {\n    id: 'move-tokyo',\n    name: 'MOVE ãƒ ãƒ¼ãƒ–',\n    role: 'PROMOTER',\n    bio: 'Tokyo-based electronic music event series celebrating art, self-expression, and cutting-edge electronic music. Curating unique experiences that bridge Japanese and international underground scenes. Founded in 2022, MOVE has become synonymous with innovative programming and immersive club experiences.',\n    location: 'Tokyo, Japan',\n    city: 'Tokyo',\n    country: 'Japan',\n    avatar: null,\n    genres: ['House', 'Techno', 'Progressive House', 'Deep House'],\n    residentAdvisor: 'https://ra.co/promoters/move-tokyo',\n    mixtape: '',\n    spotify: '',\n    instagram: '@move_tokyo',\n    website: 'https://movetokyo.jp'\n  }, {\n    id: 'vent-tokyo',\n    name: 'VENT',\n    role: 'VENUE',\n    bio: 'Premier underground electronic music venue in Tokyo\\'s Shibuya district. State-of-the-art sound system and intimate atmosphere create the perfect setting for both established and emerging artists. VENT has hosted legendary nights featuring international DJs and serves as a cultural hub for Tokyo\\'s electronic music community.',\n    location: 'Shibuya, Tokyo, Japan',\n    city: 'Tokyo',\n    country: 'Japan',\n    avatar: null,\n    genres: ['Techno', 'House', 'Deep House', 'Minimal Techno'],\n    residentAdvisor: 'https://ra.co/clubs/vent-tokyo',\n    mixtape: '',\n    spotify: '',\n    instagram: '@vent_tokyo',\n    website: 'https://vent-tokyo.com',\n    capacity: '200'\n  }]);\n  const [currentProfileId, setCurrentProfileId] = useState('al-jones');\n  const [user, setUser] = useState(userProfiles[0]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [conversations] = useState(mockConversations);\n  const [exploreFeed] = useState(mockExploreFeed);\n\n  // Initialize with some example conversations\n  const [messages, setMessages] = useState({\n    2: [\n    // Simone De Kunovich\n    {\n      text: \"Hey Al! Loved your set at Womb last weekend!\",\n      timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"Thanks Simone! The crowd was amazing\",\n      timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 300000).toISOString(),\n      isMe: true\n    }, {\n      text: \"We should definitely collaborate on something\",\n      timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 600000).toISOString(),\n      isMe: false\n    }, {\n      text: \"I'm working on a new EP, would love to have you remix one of the tracks\",\n      timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 900000).toISOString(),\n      isMe: false\n    }, {\n      text: \"That sounds amazing! Send me the stems when you're ready\",\n      timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n      isMe: true\n    }, {\n      text: \"Will do! Also, are you playing in Milan anytime soon?\",\n      timestamp: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"Planning a Europe tour for spring. Milan is definitely on the list!\",\n      timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),\n      isMe: true\n    }, {\n      text: \"Perfect! Let me know the dates, I can help with promotion\",\n      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"Ciao\",\n      timestamp: new Date(Date.now() - 60000).toISOString(),\n      isMe: false\n    }],\n    19: [\n    // Womb Tokyo\n    {\n      text: \"Hi Al Jones, we'd love to have you for our NYE event!\",\n      timestamp: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"That would be incredible! I'm definitely interested\",\n      timestamp: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000 + 3600000).toISOString(),\n      isMe: true\n    }, {\n      text: \"Great! We're thinking 2-4AM slot for the main floor\",\n      timestamp: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"Perfect timing. What's the capacity looking like?\",\n      timestamp: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000 + 1800000).toISOString(),\n      isMe: true\n    }, {\n      text: \"Full capacity - 1000 people. It's going to be massive!\",\n      timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"Can we discuss the technical setup? I have some specific requirements\",\n      timestamp: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\n      isMe: true\n    }, {\n      text: \"Of course! We have CDJ-3000s and DJM-A9. Anything else you need?\",\n      timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"That's perfect. Just need 4 channels on the mixer\",\n      timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n      isMe: true\n    }, {\n      text: \"Interested in booking you for our spring residency too\",\n      timestamp: new Date(Date.now() - 7200000).toISOString(),\n      isMe: false\n    }],\n    3: [\n    // Elena Rodriguez\n    {\n      text: \"Your new track on MOVE TRAX is fire! ðŸ”¥\",\n      timestamp: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"Thank you so much! Really happy with how it turned out\",\n      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n      isMe: true\n    }, {\n      text: \"The baseline is insane. What synth did you use?\",\n      timestamp: new Date(Date.now() - 90 * 60 * 1000).toISOString(),\n      isMe: false\n    }, {\n      text: \"Moog Sub 37 with some heavy processing in Ableton\",\n      timestamp: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\n      isMe: true\n    }, {\n      text: \"Thanks for connecting!\",\n      timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\n      isMe: false\n    }]\n  });\n  const [notifications, setNotifications] = useState([]);\n  const updateUser = updates => {\n    setUser(prev => ({\n      ...prev,\n      ...updates\n    }));\n    // Also update the profile in the userProfiles array\n    setUserProfiles(prevProfiles => prevProfiles.map(profile => profile.id === currentProfileId ? {\n      ...profile,\n      ...updates\n    } : profile));\n  };\n  const switchProfile = profileId => {\n    const newProfile = userProfiles.find(p => p.id === profileId);\n    if (newProfile) {\n      setCurrentProfileId(profileId);\n      setUser(newProfile);\n    }\n  };\n  const searchUsers = (query, filters) => {\n    let results = mockUsers;\n    if (query) {\n      results = results.filter(u => u.name.toLowerCase().includes(query.toLowerCase()) || u.role.toLowerCase().includes(query.toLowerCase()));\n    }\n    if (filters.role && filters.role !== 'all') {\n      results = results.filter(u => u.role === filters.role);\n    }\n    if (filters.location) {\n      results = results.filter(u => u.location.toLowerCase().includes(filters.location.toLowerCase()));\n    }\n    if (filters.genres && filters.genres.length > 0) {\n      results = results.filter(u => filters.genres.some(genre => {\n        var _u$genres;\n        return (_u$genres = u.genres) === null || _u$genres === void 0 ? void 0 : _u$genres.includes(genre);\n      }));\n    }\n    setSearchResults(results);\n  };\n  const sendMessage = (userId, text) => {\n    const newMessage = {\n      text,\n      timestamp: new Date().toISOString(),\n      isMe: true\n    };\n    setMessages(prev => ({\n      ...prev,\n      [userId]: [...(prev[userId] || []), newMessage]\n    }));\n    setTimeout(() => {\n      const autoReply = {\n        text: \"Thanks for your message! I'll get back to you soon.\",\n        timestamp: new Date().toISOString(),\n        isMe: false\n      };\n      setMessages(prev => ({\n        ...prev,\n        [userId]: [...prev[userId], autoReply]\n      }));\n    }, 1500);\n  };\n  const addNotification = notification => {\n    setNotifications(prev => [notification, ...prev]);\n  };\n  const clearNotifications = () => {\n    setNotifications([]);\n  };\n  const toggleLike = profileId => {\n    const newLikes = new Set(likedProfiles);\n    if (newLikes.has(profileId)) {\n      newLikes.delete(profileId);\n    } else {\n      newLikes.add(profileId);\n    }\n    setLikedProfiles(newLikes);\n  };\n  const sendConnectionRequest = (profileId, message) => {\n    const newRequests = new Set(connectionRequests);\n    newRequests.add(profileId);\n    setConnectionRequests(newRequests);\n\n    // Add message to messages state\n    const newMessages = {\n      ...messages\n    };\n    if (!newMessages[profileId]) {\n      newMessages[profileId] = [];\n    }\n    newMessages[profileId].push({\n      text: message,\n      timestamp: new Date().toISOString(),\n      isMe: true\n    });\n    setMessages(newMessages);\n  };\n  const value = {\n    user,\n    updateUser,\n    userProfiles,\n    currentProfileId,\n    switchProfile,\n    searchResults,\n    searchUsers,\n    conversations,\n    exploreFeed,\n    messages,\n    sendMessage,\n    notifications,\n    addNotification,\n    clearNotifications,\n    likedProfiles,\n    toggleLike,\n    connectionRequests,\n    sendConnectionRequest\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppProvider, \"VXCqnQUuSMBL0BKipE2DaFcErDM=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","mockUsers","mockConversations","mockExploreFeed","jsxDEV","_jsxDEV","AppContext","useAppContext","_s","context","Error","AppProvider","children","_s2","likedProfiles","setLikedProfiles","Set","connectionRequests","setConnectionRequests","userProfiles","setUserProfiles","id","name","role","bio","location","city","country","avatar","genres","residentAdvisor","mixtape","spotify","instagram","website","isPremium","calendarVisible","travelSchedule","from","to","capacity","currentProfileId","setCurrentProfileId","user","setUser","searchResults","setSearchResults","conversations","exploreFeed","messages","setMessages","text","timestamp","Date","now","toISOString","isMe","notifications","setNotifications","updateUser","updates","prev","prevProfiles","map","profile","switchProfile","profileId","newProfile","find","p","searchUsers","query","filters","results","filter","u","toLowerCase","includes","length","some","genre","_u$genres","sendMessage","userId","newMessage","setTimeout","autoReply","addNotification","notification","clearNotifications","toggleLike","newLikes","has","delete","add","sendConnectionRequest","message","newRequests","newMessages","push","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessandrocastelbuono/Desktop/tora-app/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { mockUsers, mockConversations, mockExploreFeed } from '../services/mockData';\n\nconst AppContext = createContext();\n\nexport const useAppContext = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within AppProvider');\n  }\n  return context;\n};\n\nexport const AppProvider = ({ children }) => {\n  const [likedProfiles, setLikedProfiles] = useState(new Set());\n  const [connectionRequests, setConnectionRequests] = useState(new Set());\n  \n  // Multiple user profiles\n  const [userProfiles, setUserProfiles] = useState([\n    {\n      id: 'al-jones',\n      name: 'Al Jones',\n      role: 'ARTIST',\n      bio: 'Milan-born, Italian-British-Jamaican artist Al Jones started in underground electronic music in 2006. Since young age he gained acclaim in Milan\\'s top clubs, and became resident DJ of the party Vitamina in 2016. Now Tokyo-based, he launched MOVE ãƒ ãƒ¼ãƒ– in 2022, an itinerant event celebrating art, self-expression, and electronic music, and founded the record label MOVE TRAX in 2025.',\n      location: 'Tokyo, Japan',\n      city: 'Tokyo',\n      country: 'Japan',\n      avatar: null,\n      genres: ['House', 'Deep House', 'Progressive House'],\n      residentAdvisor: 'https://it.ra.co/dj/aljones',\n      mixtape: 'https://soundcloud.com/headstream/move-tokyo-w-al-jones-friday-2nd-june?si=ae4194d0caec4177a9b49b8b1b5151b2&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing',\n      spotify: 'https://open.spotify.com/intl-it/artist/0UX0Il3rXsvMI4ZgYP3cc7?si=hph_EjveSBmYpBloiruvOw',\n      instagram: '@aljones_groove',\n      website: '',\n      isPremium: true,\n      calendarVisible: true,\n      travelSchedule: [\n        { city: 'Berlin', country: 'Germany', from: '2025-02-15', to: '2025-02-20' },\n        { city: 'Amsterdam', country: 'Netherlands', from: '2025-02-21', to: '2025-02-25' },\n        { city: 'London', country: 'UK', from: '2025-03-01', to: '2025-03-05' }\n      ]\n    },\n    {\n      id: 'alessandro-castelbuono',\n      name: 'Alessandro Castelbuono',\n      role: 'AGENT',\n      bio: 'Experienced music industry professional specializing in electronic music artist management and booking. Based in Tokyo with deep connections across Asia-Pacific markets. Represents cutting-edge artists and facilitates international collaborations between Japanese and European electronic music scenes.',\n      location: 'Tokyo, Japan',\n      city: 'Tokyo',\n      country: 'Japan',\n      avatar: null,\n      genres: ['Techno', 'House', 'Progressive House', 'Melodic Techno'],\n      residentAdvisor: '',\n      mixtape: '',\n      spotify: '',\n      instagram: '@alessandro_agent',\n      website: 'https://castelbuono-agency.com'\n    },\n    {\n      id: 'move-tokyo',\n      name: 'MOVE ãƒ ãƒ¼ãƒ–',\n      role: 'PROMOTER',\n      bio: 'Tokyo-based electronic music event series celebrating art, self-expression, and cutting-edge electronic music. Curating unique experiences that bridge Japanese and international underground scenes. Founded in 2022, MOVE has become synonymous with innovative programming and immersive club experiences.',\n      location: 'Tokyo, Japan',\n      city: 'Tokyo',\n      country: 'Japan',\n      avatar: null,\n      genres: ['House', 'Techno', 'Progressive House', 'Deep House'],\n      residentAdvisor: 'https://ra.co/promoters/move-tokyo',\n      mixtape: '',\n      spotify: '',\n      instagram: '@move_tokyo',\n      website: 'https://movetokyo.jp'\n    },\n    {\n      id: 'vent-tokyo',\n      name: 'VENT',\n      role: 'VENUE',\n      bio: 'Premier underground electronic music venue in Tokyo\\'s Shibuya district. State-of-the-art sound system and intimate atmosphere create the perfect setting for both established and emerging artists. VENT has hosted legendary nights featuring international DJs and serves as a cultural hub for Tokyo\\'s electronic music community.',\n      location: 'Shibuya, Tokyo, Japan',\n      city: 'Tokyo',\n      country: 'Japan',\n      avatar: null,\n      genres: ['Techno', 'House', 'Deep House', 'Minimal Techno'],\n      residentAdvisor: 'https://ra.co/clubs/vent-tokyo',\n      mixtape: '',\n      spotify: '',\n      instagram: '@vent_tokyo',\n      website: 'https://vent-tokyo.com',\n      capacity: '200'\n    }\n  ]);\n\n  const [currentProfileId, setCurrentProfileId] = useState('al-jones');\n  const [user, setUser] = useState(userProfiles[0]);\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [conversations] = useState(mockConversations);\n  const [exploreFeed] = useState(mockExploreFeed);\n  \n  // Initialize with some example conversations\n  const [messages, setMessages] = useState({\n    2: [ // Simone De Kunovich\n      { text: \"Hey Al! Loved your set at Womb last weekend!\", timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"Thanks Simone! The crowd was amazing\", timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 300000).toISOString(), isMe: true },\n      { text: \"We should definitely collaborate on something\", timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 600000).toISOString(), isMe: false },\n      { text: \"I'm working on a new EP, would love to have you remix one of the tracks\", timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 900000).toISOString(), isMe: false },\n      { text: \"That sounds amazing! Send me the stems when you're ready\", timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), isMe: true },\n      { text: \"Will do! Also, are you playing in Milan anytime soon?\", timestamp: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"Planning a Europe tour for spring. Milan is definitely on the list!\", timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(), isMe: true },\n      { text: \"Perfect! Let me know the dates, I can help with promotion\", timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"Ciao\", timestamp: new Date(Date.now() - 60000).toISOString(), isMe: false }\n    ],\n    19: [ // Womb Tokyo\n      { text: \"Hi Al Jones, we'd love to have you for our NYE event!\", timestamp: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"That would be incredible! I'm definitely interested\", timestamp: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000 + 3600000).toISOString(), isMe: true },\n      { text: \"Great! We're thinking 2-4AM slot for the main floor\", timestamp: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"Perfect timing. What's the capacity looking like?\", timestamp: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000 + 1800000).toISOString(), isMe: true },\n      { text: \"Full capacity - 1000 people. It's going to be massive!\", timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"Can we discuss the technical setup? I have some specific requirements\", timestamp: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(), isMe: true },\n      { text: \"Of course! We have CDJ-3000s and DJM-A9. Anything else you need?\", timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"That's perfect. Just need 4 channels on the mixer\", timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(), isMe: true },\n      { text: \"Interested in booking you for our spring residency too\", timestamp: new Date(Date.now() - 7200000).toISOString(), isMe: false }\n    ],\n    3: [ // Elena Rodriguez\n      { text: \"Your new track on MOVE TRAX is fire! ðŸ”¥\", timestamp: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"Thank you so much! Really happy with how it turned out\", timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), isMe: true },\n      { text: \"The baseline is insane. What synth did you use?\", timestamp: new Date(Date.now() - 90 * 60 * 1000).toISOString(), isMe: false },\n      { text: \"Moog Sub 37 with some heavy processing in Ableton\", timestamp: new Date(Date.now() - 60 * 60 * 1000).toISOString(), isMe: true },\n      { text: \"Thanks for connecting!\", timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(), isMe: false }\n    ]\n  });\n  \n  const [notifications, setNotifications] = useState([]);\n\n  const updateUser = (updates) => {\n    setUser(prev => ({ ...prev, ...updates }));\n    // Also update the profile in the userProfiles array\n    setUserProfiles(prevProfiles => \n      prevProfiles.map(profile => \n        profile.id === currentProfileId ? { ...profile, ...updates } : profile\n      )\n    );\n  };\n\n  const switchProfile = (profileId) => {\n    const newProfile = userProfiles.find(p => p.id === profileId);\n    if (newProfile) {\n      setCurrentProfileId(profileId);\n      setUser(newProfile);\n    }\n  };\n\n  const searchUsers = (query, filters) => {\n    let results = mockUsers;\n    \n    if (query) {\n      results = results.filter(u => \n        u.name.toLowerCase().includes(query.toLowerCase()) ||\n        u.role.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n\n    if (filters.role && filters.role !== 'all') {\n      results = results.filter(u => u.role === filters.role);\n    }\n\n    if (filters.location) {\n      results = results.filter(u => \n        u.location.toLowerCase().includes(filters.location.toLowerCase())\n      );\n    }\n\n    if (filters.genres && filters.genres.length > 0) {\n      results = results.filter(u => \n        filters.genres.some(genre => u.genres?.includes(genre))\n      );\n    }\n\n    setSearchResults(results);\n  };\n\n  const sendMessage = (userId, text) => {\n    const newMessage = {\n      text,\n      timestamp: new Date().toISOString(),\n      isMe: true\n    };\n\n    setMessages(prev => ({\n      ...prev,\n      [userId]: [...(prev[userId] || []), newMessage]\n    }));\n\n    setTimeout(() => {\n      const autoReply = {\n        text: \"Thanks for your message! I'll get back to you soon.\",\n        timestamp: new Date().toISOString(),\n        isMe: false\n      };\n      setMessages(prev => ({\n        ...prev,\n        [userId]: [...prev[userId], autoReply]\n      }));\n    }, 1500);\n  };\n\n  const addNotification = (notification) => {\n    setNotifications(prev => [notification, ...prev]);\n  };\n\n  const clearNotifications = () => {\n    setNotifications([]);\n  };\n\n  const toggleLike = (profileId) => {\n    const newLikes = new Set(likedProfiles);\n    if (newLikes.has(profileId)) {\n      newLikes.delete(profileId);\n    } else {\n      newLikes.add(profileId);\n    }\n    setLikedProfiles(newLikes);\n  };\n\n  const sendConnectionRequest = (profileId, message) => {\n    const newRequests = new Set(connectionRequests);\n    newRequests.add(profileId);\n    setConnectionRequests(newRequests);\n    \n    // Add message to messages state\n    const newMessages = { ...messages };\n    if (!newMessages[profileId]) {\n      newMessages[profileId] = [];\n    }\n    newMessages[profileId].push({\n      text: message,\n      timestamp: new Date().toISOString(),\n      isMe: true\n    });\n    setMessages(newMessages);\n  };\n\n  const value = {\n    user,\n    updateUser,\n    userProfiles,\n    currentProfileId,\n    switchProfile,\n    searchResults,\n    searchUsers,\n    conversations,\n    exploreFeed,\n    messages,\n    sendMessage,\n    notifications,\n    addNotification,\n    clearNotifications,\n    likedProfiles,\n    toggleLike,\n    connectionRequests,\n    sendConnectionRequest\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}